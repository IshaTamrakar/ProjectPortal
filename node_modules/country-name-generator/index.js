const requireDir = require('moleculer-require-dir')
const name = requireDir(__dirname + '/src/name', { recurse: true, camelCase: false })

function random (min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min
}

function arrayRandom (arr) {
  return arr[random(0, arr.length - 1)]
}

function isMale (male, _male) {
  if (male === true || male === false)
    return male
  if (_male === true || _male === false)
    return this.male
  return random(0, 1) === 1
}

function getName (country, fallback) {
  return name[country] || name[fallback] || name['en']
}
/**
 * @typedef {"af_za"|"am"|"ar"|"at"|"au"|"az"|"bd"|"be"|"bg"|"br"|"ca"|"cn"|"cz"|"de"|"de_at"|"de_ch"|"dk"|"el"|"en"|"en_au"|"en_au_ocker"|"en_ind"|"en_ng"|"en_za"|"es"|"es_mx"|"fa"|"fi"|"fr"|"gb"|"ge"|"gr"|"hu"|"id"|"id_id"|"ir"|"is"|"it"|"ja"|"jo"|"jp"|"jp_hiragana"|"jp_kanji"|"jp_katakana"|"ko"|"kr"|"kz"|"lv"|"md"|"me"|"my"|"nb_no"|"nep"|"nl"|"nl_be"|"no"|"np"|"nz"|"pe"|"ph"|"pl"|"pt"|"pt_br"|"pt_pt"|"ro"|"rs"|"ru"|"sa"|"se"|"si"|"sk"|"sv"|"th"|"tr"|"tw"|"ua"|"ug"|"uk"|"ve"|"vi"|"vn"|"za"|"zh_cn"|"zh_tw"|"zu_za"} CountryNameGeneratorList
 */

class CountryNameGenerator {
  /**
   *
   * @param {CountryNameGeneratorList} country
   * @param {CountryNameGeneratorList} [fallbackCountry="en"]
   * @param {boolean} male
   */
  constructor ({ country, fallbackCountry = 'en', male }) {
    this.name = getName(country, fallbackCountry)
    this.male = male
  }
  firstName (male) {
    const prefix = isMale(male, this.male) ? 'male' : 'female'
    return arrayRandom(this.name[`${prefix}_first_name`] || this.name['first_name'])
  }
  lastName (male) {
    const prefix = isMale(male, this.male) ? 'male' : 'female'
    return arrayRandom(this.name[`${prefix}_last_name`] || this.name['last_name'])
  }
  static firstName (male, country = 'en', fallbackCountry = 'en') {
    const prefix = isMale(male) ? 'male' : 'female'
    const name = getName(country, fallbackCountry)
    const key = `${prefix}_first_name`
    return arrayRandom(name[key] || name['first_name'])
  }
  static lastName (male, country = 'en', fallbackCountry = 'en') {
    const prefix = isMale(male) ? 'male' : 'female'
    const name = getName(country, fallbackCountry)
    const key = `${prefix}_last_name`
    return arrayRandom(name[key] || name['last_name'])
  }
}

module.exports = CountryNameGenerator